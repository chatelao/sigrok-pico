name: Build and Release UF2

on:
  push:
    tags:
      - 'v*.*.*'
      - 'v*.*'
      - 'v*'
  workflow_dispatch:

jobs:
  build_and_release:
    runs-on: ubuntu-latest

    permissions:
      contents: write 

    steps:
      # 1. Code auschecken
      - name: Checkout sigrok-pico repository
        uses: actions/checkout@v4

      # 2. Raspberry Pi Pico SDK als SIBLING klonen
      - name: Clone Raspberry Pi Pico SDK
        run: |
          git clone --depth 1 https://github.com/raspberrypi/pico-sdk.git $(pwd)/../pico-sdk

      # 3. NEUER SCHRITT: Submodule des PICO-SDK initialisieren (für TinyUSB)
      - name: Initialize Pico SDK Submodules
        run: |
          cd $(pwd)/../pico-sdk
          git submodule update --init --depth 1

      # 4. Build-Abhängigkeiten installieren
      - name: Install Build Dependencies
        run: |
          sudo apt-get update
          sudo apt-get install -y cmake gcc-arm-none-eabi libnewlib-arm-none-eabi libstdc++-arm-none-eabi-newlib

      # 5. Projekt kompilieren (Pfade angepasst)
      - name: Build project
        run: |
          # Der Pfad zum SDK ist jetzt das SIBLING-Verzeichnis
          export PICO_SDK_PATH=$(pwd)/../pico-sdk
          
          # Der CMAKE_MODULE_PATH verweist weiterhin auf das Root-Verzeichnis
          # des sigrok-pico-Projekts, um die lokale pico_sdk_import.cmake zu finden
          cmake -B build -S pico_sdk_sigrok -DPICO_SDK_PATH=$PICO_SDK_PATH -DCMAKE_MODULE_PATH=$(pwd)
          
          # Make ausführen
          make -C build -j$(nproc)

      # 6. Artefakt für das Release vorbereiten
      - name: Prepare Release Artifacts
        id: prep
        run: |
          UF2_FILE="build/pico_sdk_sigrok.uf2"
          ARTIFACT_NAME="sigrok-pico-${{ github.ref_name }}.uf2"
          cp $UF2_FILE $ARTIFACT_NAME
          echo "artifact_name=$ARTIFACT_NAME" >> $GITHUB_OUTPUT
          echo "tag_name=${{ github.ref_name }}" >> $GITHUB_OUTPUT

      # 7. GitHub Release erstellen und UF2 hochladen
      - name: Create GitHub Release
        uses: softprops/action-gh-release@v1
        with:
          tag_name: ${{ steps.prep.outputs.tag_name }}
          name: "Release ${{ steps.prep.outputs.tag_name }}"
          body: "Automatisierter Build von `pico_sdk_sigrok.uf2` für dieses Release."
          draft: false
          prerelease: false
          files: ${{ steps.prep.outputs.artifact_name }}
